
#include <windows.h>
#include <winsock.h>

#include "icmp_ping.h"

typedef unsigned long IPAddr;

typedef struct ip_option_information {
  UCHAR  Ttl;
  UCHAR  Tos;
  UCHAR  Flags;
  UCHAR  OptionsSize;
  PUCHAR OptionsData;
} IP_OPTION_INFORMATION, *PIP_OPTION_INFORMATION;

typedef struct icmp_echo_reply {
  IPAddr                       Address;
  ULONG                        Status;
  ULONG                        RoundTripTime;
  USHORT                       DataSize;
  USHORT                       Reserved;
  PVOID                        Data;
  struct ip_option_information  Options;
} ICMP_ECHO_REPLY, *PICMP_ECHO_REPLY;

typedef DWORD  (__stdcall *IcmpSendEcho)(HANDLE,IPAddr,LPVOID,WORD,PIP_OPTION_INFORMATION,LPVOID,DWORD,DWORD);
typedef HANDLE (__stdcall *IcmpCreateFile)(void);
typedef BOOL   (__stdcall *IcmpCloseHandle)(HANDLE);

HMODULE lModl=NULL;

IcmpCreateFile  fIcmpCreateFile=NULL;
IcmpSendEcho    fIcmpSendEcho=NULL;
IcmpCloseHandle fIcmpCloseHandle=NULL;

bool icmp_ping_init(void) {
    lModl=(HMODULE)LoadLibrary ("Iphlpapi.dll");
    if (lModl==NULL)
        return false;
    else{
        fIcmpCreateFile=(IcmpCreateFile)GetProcAddress (lModl,"IcmpCreateFile");
        fIcmpSendEcho=(IcmpSendEcho)GetProcAddress (lModl,"IcmpSendEcho");
        fIcmpCloseHandle=(IcmpCloseHandle)GetProcAddress (lModl,"IcmpCloseHandle");
        if (fIcmpCreateFile==NULL || fIcmpSendEcho==NULL || fIcmpCloseHandle==NULL)
            return false;
        return true;
    }
}

bool icmp_ping(const char* targe_ip) {
    HANDLE iHwnd;
    iHwnd=fIcmpCreateFile();
    IPAddr pAddr;
    pAddr=(IPAddr)inet_addr((char *)targe_ip);
    icmp_echo_reply pData;
    memset(&pData,0,sizeof(icmp_echo_reply));
    bool Rtn=false;
    int state=0;

	for (int i=0;i<ICMP_PING_LOOP_COUNT;++i) {
	    fIcmpSendEcho(iHwnd,pAddr,NULL,0,NULL,(LPVOID)&pData,sizeof(icmp_echo_reply),0);
		if (pData.Status==0) ++state;
	}
	if (state>=2) Rtn=true;

    fIcmpCloseHandle(iHwnd);
    return Rtn;
}

void icmp_ping_clean(void) {
	FreeLibrary (lModl);
	lModl=NULL;
    fIcmpCreateFile   =NULL;
    fIcmpSendEcho     =NULL;
    fIcmpCloseHandle  =NULL;
}
